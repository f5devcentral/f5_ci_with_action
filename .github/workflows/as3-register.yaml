# This workflow will register a new AS3 declaration on BIG-IP

name: Register AS3 Declaration

on:
  push:
    paths:
    - "declarations/as3/register/**"
    branches: 
    - master
    - dev

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # Read the S3 bucket parameters that were created during the initial Terraform processing
    - name: Read S3 bucket parameters
      id: s3_bucket
      run: | 
         echo ::set-output name=s3_bucket_name::$(cat ./s3/s3_bucket_params.json | jq -r '.bucket.name')
         echo ::set-output name=s3_bucket_key::$(cat ./s3/s3_bucket_params.json | jq -r '.bucket.key')
         echo ::set-output name=s3_bucket_region::$(cat ./s3/s3_bucket_params.json | jq -r '.bucket.region')
   
    # Read the output values produced by Terraform and stored in an AWS S3 bucket
    - name: read S3 bucket
      uses: prewk/s3-cp-action@master
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
        AWS_REGION: ${{ steps.s3_bucket.outputs.s3_bucket_region }}
        SOURCE: s3://${{ steps.s3_bucket.outputs.s3_bucket_name }}/${{ steps.s3_bucket.outputs.s3_bucket_key }}
        DEST: ./s3-variables
    
    # Display the S3 Contents
    - name: display S3 contents
      run: cat ./s3-variables
      

    # Prepare the environment to run the F5 CLI Python app
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install f5-cli
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Read the BIG-IP IP:port and password created by the initial Terraform run    
    - name: Read BIGIP Host Data
      id: bigip
      run: | 
        echo ::set-output name=bigip_host::$(cat ./s3-variables | jq '.outputs.F5_IP.value')
        echo ::set-output name=bigip_password::$(cat ./s3-variables | jq '.outputs.F5_Password.value')
      
    - name: Display BIGIP Host
      run: |
         echo "BIGIP host is = ${{ steps.bigip.outputs.bigip_host }}"
         echo "BIGIP password is = ${{ steps.bigip.outputs.bigip_password }}"
  

    # Login to the BIG-IP using the F5 CLI
    - name: F5 CLI Login
      id: login
      env: 
        SECRET_NAME: ${{ steps.bigip.outputs.bigip_password }}
      run: |
        f5 config set-defaults --disable-ssl-warnings true --auto-approve
        f5 login --authentication-provider bigip --host ${{ steps.bigip.outputs.bigip_host }} --port 8443 --user admin --password ${{ steps.bigip.outputs.bigip_password }}
    - name: Check AS3 Installed
      id: verify
      run: | 
        echo ::set-output name=verify_results::$(f5 bigip extension as3 verify 2>&1)


    - name: set output variables
      id: set_outputs
      run: |
        echo ::set-output name=as3_installed::$(f5 bigip extension as3 verify 2>&1 | jq '.installed')

    - name: Evaluate verify results
      id: check_as3_installed
#      if: steps.set_outputs.output.as3_installed == false
      run: echo "THIS IS THE INSTALL STATUS " ${{ steps.set_outputs.outputs.as3_installed }}

    - name: Upgrade if needed
      id: upgrade_as3
      if: steps.set_outputs.outputs.as3_current < steps.set_outputs.outputs.as3_latest
      run: echo 'installed as3 version older than latest version'    
    
    - name: Get list of changed files
      id: files
      uses: jitterbit/get-changed-files@v1
      
    - name: Register AS3 declaration
      id: deploy_as3
      # if: steps.verify.outputs.verify_results && steps.files.output.added_modified
      run: |
        for changed_file in ${{ steps.files.outputs.added_modified }}; do
        if [[ $changed_file =~  ^declarations/as3/register/.* ]]
        then
          echo "name of chnaged file = ${changed_file}"
          echo ::set-output name=deploy_results::$(f5 bigip extension as3 create --declaration ${changed_file} 2>&1 | jq .)
        fi          
        done
    
    - name: Show F5 AS3 deploy result
      run: echo "F5 AS3 declaration deploy result = ${{ steps.deploy_as3.outputs.deploy_results }}"
